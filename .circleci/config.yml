version: 2.1

#============================================================
# A reference to filter builds only to the master and feature
# branches.
#============================================================

filter_builds: &filter_builds
  filters:
    branches:
      only:
        - master
        - feature


orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@1.2.1

commands:
  install-dependencies:
    description: "Install dependencies for the given application layer (frontend/backend)"
    parameters:
      layer:
        type: string
    steps:
      - run:
          name: Install << parameters.layer >> dependencies
          command: |
            cd << parameters.layer >> 
            npm i
      - slack/notify-on-failure

jobs:
  build-backend:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install-dependencies:
          layer: "backend"
      - run:
          name: Build Backend
          command: |
            cd backend
            npm run build
      - slack/notify-on-failure

  build-frontend:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install-dependencies:
          layer: "frontend"
      - run:
          name: Build Frontend
          command: |
            cd frontend
            npm run build
      - slack/notify-on-failure

  test-backend:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install-dependencies:
          layer: "backend"
      - run:
          name: Unit Test Backend
          command: |
            cd backend
            mkdir -p ./reports/junit/
            npm run test:report
          environment:
            JEST_JUNIT_OUTPUT_DIR: "./reports/junit/"
      - store_test_results:
          path: ./backend/reports/junit/
      - slack/notify-on-failure

  test-frontend:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install-dependencies:
          layer: "frontend"
      - run:
          name: Unit Test Frontend
          command: |
            cd frontend
            mkdir -p ./reports/junit/              
            npm run test:report
          environment:
            JEST_JUNIT_OUTPUT_DIR: "./reports/junit/"
      - store_test_results:
          path: ./frontend/reports/junit/
      - slack/notify-on-failure

  audit-backend-dependencies:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install-dependencies:
          layer: "backend"
      - run:
          name: Audit backend Dependencies
          command: |
            cd backend
            npm audit --audit-level=critical
      - slack/notify-on-failure

  audit-frontend-dependencies:
    docker:
      - image: cimg/node:lts
    steps:
      - checkout
      - install-dependencies:
          layer: "frontend"
      - run:
          name: Audit frontend dependencies
          command: |
            cd frontend
            npm audit --audit-level=critical
      - slack/notify-on-failure

  create-infra-backend:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Create Infra Backend
          command: |
            aws cloudformation deploy --template-file .circleci/files/backend.yml \
              --stack-name "backend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="deployment-${CIRCLE_WORKFLOW_ID:0:7}" \
              --tags project=udacity
      - run:
          name: save backend instance public url
          command: |
            aws ec2 describe-instances --filters "Name=tag-value,Values=backend-deployment-${CIRCLE_WORKFLOW_ID:0:7}" \
             --query "Reservations[*].Instances[*].[PublicDnsName]" --output text > backend_url.txt

      - run:
          name: describe events on failure
          command: |
            aws cloudformation describe-stack-events --stack-name "backend-${CIRCLE_WORKFLOW_ID:0:7}"
          when: on_fail

  create-infra-frontend:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Create Infra frontend
          command: |
            aws cloudformation deploy --template-file .circleci/files/frontend.yml \
              --stack-name "frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
              --parameter-overrides ID="deployment-${CIRCLE_WORKFLOW_ID:0:7}" \
              --tags project=udacity
      - run:
          name: describe events on failure
          command: |
            aws cloudformation describe-stack-events --stack-name "backend-${CIRCLE_WORKFLOW_ID:0:7}"
          when: on_fail

workflows:
  default:    
    jobs:
      - build-backend:
          <<: *filter_builds
      
      - build-frontend:
          <<: *filter_builds

      - test-backend:
          <<: *filter_builds

      - test-frontend:
          <<: *filter_builds
          
      - audit-backend-dependencies:
          <<: *filter_builds
          
      - audit-frontend-dependencies:
          <<: *filter_builds
          
      - create-infra-backend:
          <<: *filter_builds
          
      - create-infra-frontend:
          <<: *filter_builds
          
